name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [ opened, synchronize, reopened ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v1
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Create and populate .Renviron file
        env:
          GOOGLE_SERVICE: ${{ secrets.GOOGLE_SERVICE }}
        run: |
            touch app/google-services.json
            echo $GOOGLE_SERVICE >> app/google-services.json
#      - name: Run Lint
#        run: ./gradlew lint

#      - name: Run Detekt
#        run: ./gradlew detekt

      - name: Run Jacoco Report
        run: ./gradlew jacocoTestReport --stacktrace

      - name: Run Jacoco coverageVerification
        run: ./gradlew jacocoCoverageVerification --stacktrace

      - name: Build with Gradle
        run: ./gradlew clean build test --no-daemon --parallel build

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info